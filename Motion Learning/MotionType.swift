//
//  MotionType.swift
//  Motion Learning
//
//  Created by Dominic Opitz on 22.09.16.
//  Copyright Â© 2016 Razorfish GmbH. All rights reserved.
//

import Foundation

enum MotionType: String {
    
    case standing, walking, pushing
    
    static let all = [standing, walking, pushing]
    
    static var weights: [Float] {
        return [3.00599766, 1.8283993, -4.66209078, -0.66466552, -5.02224493, 1.53766847, -1.63126099, -0.0114302952, -0.0916786641, -0.115787789, -1.24067354, -1.07422245, 3.2847352, 0.205450267, 2.85019636, -1.9935497, 0.879223406, 0.491227776, 0.287287027, -0.254416496, -1.68313551, -0.886897981, 0.528549194, 0.216854542, 6.95259619, 5.5728631, 2.2257154, 0.256995708, 0.00998859759, 0.278845131, -0.625806928, 0.142083228, 0.281506509, -0.26446569, 1.76329613, 1.09020019, 0.981006384, -0.366357356, 0.417983919, 0.238487706, 2.8747077, 1.2475543, -3.19283485, 0.0492379032, -4.19126654, -0.492049873, -1.18773901, -0.361879915, -0.433083504, 0.0891347751, -0.453089178, 0.207225055, -0.123050377, -0.0847785249, -0.869182527, -1.52486515, -1.0068866, -0.00646937406, 0.00247126212, -0.428111255, -0.836028278, 0.376519263, -0.409214318, 0.0626572892, -0.752476394, -0.718634903, 0.0276743528, 0.109233528, -0.287169397, 0.345029086, 0.960319996, 1.16278148, -1.26768088, -0.496575296, -4.94240665, -2.7099824, -1.50980365, -0.108940937, -0.0968968123, -0.273699522, 0.553135157, -1.49330282, 5.60554028, -0.411257774, 1.59436953, -5.4765873, 0.777296484, 0.289141804, 0.388470829, 0.376548946, -0.701276004, 1.40124738, -1.31191683, -6.55382919, -2.81216145, 2.90473533, 1.05266893, 0.659161627, 3.2894578, 1.01683879, -2.03997612, 5.03113842, -4.60204029, 6.58383703, -0.473694921, 2.41911125, -1.46630907, -0.481378078, -3.85583258, -8.28895378, -0.020448396, -5.16843367, 2.71087861, 2.48843455, 0.892336249, -4.93502092, -0.412930876, -0.390639961, -3.73356056, 1.85899639]
    }
    
    var answer: [Float] {
        switch self {
        case .standing:
            return [1,0,0]
        case .walking:
            return [0,1,0]
        case .pushing:
            return [0,0,1]
        }
    }
            
    static func by(output: [Float]) -> MotionType? {
        guard let max = output.sorted(by: >).first, let maxIndex = output.index(of: max), output.count == all.count else {
            return nil
        }
        
        return all[maxIndex]
    }
}
